#–õ—ñ–Ω—ñ–π–Ω–∞ —Ä–µ–≥—Ä–µ—Å—ñ—è
from colorama import Fore
import numpy as np
from sklearn.linear_model import LinearRegression

print(f" 8-–π –≤–∞—Ä—ñ–∞–Ω—Ç")

# print("–í–≤–µ–¥–µ–º–æ –¥–∞–Ω—ñ")
print(f"–ü–æ–¥–∞–º–æ x —è–∫ –¥–≤–æ–≤–∏–º—ñ—Ä–Ω–∏–π –º–∞—Å–∏–≤:")
x = np.array([6.7, 7.2, 8.1, 11.2, 12.6, 13.3, 15.6, 17.9, 18, 18.9]).reshape((-1, 1))
y = np.array([2.3, 3.1, 6.5, 7.6, 8.4, 9.7, 11.3, 12.8, 13.5, 14.6])



model = LinearRegression()
print(model.fit(x, y))


r_sq = round(model.score(x, y), 4)
print(f"–ö–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç –¥–µ—Ç–µ—Ä–º—ñ–Ω–∞—Ü—ñ—ó (ùëÖ^2): {r_sq}")

print(f"intercept (a, ùëè0): {round(model.intercept_, 4)}")
print(f"slope (b, ùëè1): {model.coef_}")

print(f"–ü–æ–¥–∞–º–æ —ñ y —è–∫ –¥–≤–æ–≤–∏–º—ñ—Ä–Ω–∏–π –º–∞—Å–∏–≤:")

new_model = LinearRegression().fit(x, y.reshape((-1, 1)))
print(f"intercept (a, ùëè0): {new_model.intercept_}")
print(f"slope (b, ùëè1): {new_model.coef_}")


# print("–ü—Ä–æ–≥–Ω–æ–∑—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å")
# g(xi) –∑–∞–≤–¥—è–∫–∏ —Ñ—É–Ω–∫—Ü—ñ—ó Python
y_pred = model.predict(x)
print(f"predicted response (g(xi)): \n{y_pred}")

# g(xi) –∑ —Ñ–æ—Ä–º—É–ª–∏
y_pred = model.intercept_ + model.coef_ * x
print(f"predicted response (g(xi)):\n{y_pred}")

# –º–æ–¥–µ–ª—å –¥–ª—è –Ω–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö
x_new = np.arange(5).reshape((-1, 1))
print(x_new)
y_new = model.predict(x_new)
print(y_new)

print(Fore.YELLOW + f"–í–∏—Å–Ω–æ–≤–∫–∏:"
                 f"\n (ùëÖ^2): {r_sq},"
                 f"\n (a, ùëè0): {round(model.intercept_, 4)},"
                 f"\n (b, ùëè1): {model.coef_}")
